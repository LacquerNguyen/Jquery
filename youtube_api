
// https://developers.google.com/youtube/iframe_api_reference
// Inject YouTube API script
// 2. This code loads the IFrame Player API code asynchronously.
var tag = document.createElement('script');
var $ = jQuery;

tag.src = "https://www.youtube.com/iframe_api";
var firstScriptTag = document.getElementsByTagName('script')[0];
firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
var player;
var is_playing = true;
var playButton = document.getElementById("play_button");
var pauseButton = document.getElementById("pause_button");
var muteButton = document.getElementById("mute_button");
// var videoBackground = document.getElementsByClassName("video_background")[0];
function onYouTubeIframeAPIReady() {
    player = new YT.Player('tmp_player', {
        height: '100%',
        width: '100%',
        videoId: 'J9BMfLqbHdo',
        playerVars: {
            showinfo: 0,
            controls: 0,
            autohide: 1,
            rel: 0,
            mute: 0,
            disablekb: 0,
            playsinline: 1,
            loop: 1,
            playlist: 'J9BMfLqbHdo'
        },
        events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
        }
    });
}

// 4. The API will call this function when the video player is ready.
function onPlayerReady(event) {
    if (window.matchMedia("(min-width: 641px)").matches) {
        event.target.playVideo();
        $(".section_video").removeClass('video_stop');
        $(".section_video").addClass('video_play');
    }else{
        $(".section_video").addClass('video_stop');
        $(".section_video").removeClass('video_play');
    }
    // bind events
    playButton.addEventListener("click", function(event) {
        $(this).hide();
        $('#pause_button').css('display','inline-block');
        $(".video_background").removeClass('overlay');
        player.playVideo();
        $(".section_video").removeClass('video_stop');
        $(".section_video").addClass('video_play');
    });
    pauseButton.addEventListener("click", function(event) {
        $(this).hide();
        $('#play_button').css('display','inline-block');
        player.pauseVideo();
        $(".video_background").addClass('overlay');
    });
    muteButton.addEventListener("click", function(event) {
        if (player.isMuted()) {
            player.unMute();
            $(this).removeClass('disable');
            $(this).removeClass('volume_mute').addClass('volume_down');

        } else {
            player.mute();
            $(this).addClass('disable');
            $(this).removeClass('volume_down').addClass('volume_mute');
        }
    });
}
function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.PLAYING) {
        // $(".video_background").removeClass('overlay');
        $(".video_background").removeClass('img_background');
        $(".section_video").addClass('video_play');
        $(".section_video").removeClass('video_stop');
    }
    if (event.data == YT.PlayerState.ENDED) {
        player.playVideo();
        // $(".video_background").addClass('overlay');
        playButton.addEventListener("click", function(event) {
            muteButton.classList.remove('volume_mute').classList.add('volume_down');
            player.playVideo();
        });
    }
}
function windowScrollPauseVideo(){
    $(window).on('scroll', function() {
        var ofsetTop = $('.section_video').innerHeight();
        var scrollWindow = $(window).scrollTop();
        if (window.matchMedia("(min-width: 640px)").matches) {
            if(scrollWindow> ofsetTop){
                player.pauseVideo();
                $('#pause_button').hide();
                $('#play_button').css('display','inline-block');
            }else{
                player.playVideo();
                $('#play_button').hide();
                $('#pause_button').css('display','inline-block');
            }
        }
    })

}
windowScrollPauseVideo()

function stopVideo() {
    player.stopVideo();
}
function startVideo() {
    player.playVideo();
}
// 5. The API calls this function when the player's state changes.
//    The function indicates that when playing a video (state=1),
//    the player should play for six seconds and then stop.

https://developers.google.com/youtube/iframe_api_reference










